--Data Ingestion and Processing - Assignment

--The New York City Taxi & Limousine Commission (TLC) has provided a dataset of trips made by the taxis in the New York City
--The records include fields capturing pick-up and drop-off dates/times, pick-up and drop-off locations (location coordinates of the starting and ending points), trip distances, itemized fares, rate types, payment types, driver-reported passenger counts etc.
--This dataset was created by aggregating the aforementioned records. It provides precise location coordinates for where the trip started and ended, timestamps for when the trip started and ended, plus a few other variables including fare amount, payment method, and distance travelled.

--We ONLY consider the data of yellow taxis for November and December of the year 2017.

--Adding intial set of commands:

ADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;

SET hive.exec.dynamic.partition = true;
SET hive.exec.dynamic.partition.mode = nonstrict;
SET hive.exec.max.dynamic.partitions = 1000;
SET hive.exec.max.dynamic.partitions.pernode = 1000;
SET hive.execution.engine=mr;

drop table rajat_NYC_taxi;

CREATE EXTERNAL TABLE IF NOT EXISTS rajat_NYC_taxi(vendorid int, tpep_pickup string, tpep_dropoff string,
passenger_count int, trip_distance double, ratecodeID int, store_forward_flag string, pickup_location int, dropoff_location int,
payment_type int, fare_amount double, extra double, mta_tax double, tip_amount double, tolls_amount double,
improvement_surcharge double, total_amount double)
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
LOCATION '/common_folder/nyc_taxi_data/'
tblproperties ("skip.header.line.count"="1");

--Basic Data Quality Checks: Question 1
--How many records has each TPEP [Taxi-Passenger Experience Enhancement Program Provider] provided? 
--Write a query that summarises the no. of records of each provider.

select vendorid as Vendor_Id, count(*) as Total_Num_Records
from rajat_taxifare
group by vendorid;

-- Total Records with VendorID 2: 647183
-- Total Records with VendorID 1: 527386


--Basic Data Quality Checks:  Question 2 
--The data provided is for months November and December only. Check whether the data is consistent, and if not, identify the data quality issues. 
--Mention all data quality issues in comments.

select year(tpep_pickup) as Pickup_Year, month(tpep_pickup) as Pickup_Month, count(*) as Total_Records
from rajat_NYC_taxi
group by year(tpep_pickup), month(tpep_pickup)
order by Pickup_Year, Pickup_Month;

--Above query shows 14 records from January 2003 till January 2018, which are not from Nov and Dec 2017


select year(tpep_dropoff) as Dropoff_Year, month(tpep_dropoff) as Dropoff_Month, count(*) as Total_Records
from rajat_NYC_taxi
group by year(tpep_dropoff), month(tpep_dropoff)
order by Dropoff_Year, Dropoff_Month;

--Above query shows 117 records from January 2003 till April 2019, which are not from Nov and Dec 2017


SELECT count(*) as Invalid_timestamps
FROM rajat_NYC_taxi
where unix_timestamp(tpep_pickup) > unix_timestamp(tpep_dropoff);

--Above query shows we have 73 records in which we have pickup timestamp greater than drop-off timestamp, which are invalid records.

select passenger_count as Total_Passengers, count(*) as Total_Records
from rajat_NYC_taxi
group by passenger_count
order by passenger_count;

--Above query shows several data quality issues.
--First is that we cannnot have zero passengers in taxi which are 6824 invalid records.
--Second is that we can only have 1 to 6 passengers at a time in taxi, other than that passengers with more than 6 are invalid which are 16 invalid records

select ratecodeID, count(*) as Total_Records
from rajat_NYC_taxi
group by ratecodeID
order by ratecodeID;

--Above query shows rate code ID total records
--We have only rate code from 1 to 6. Rate code with 99 is invalid with 9 records.


select extra as Extra_Charge, count(*) as Total_Records
from rajat_NYC_taxi
group by extra order by extra;

--As per data dictionary extra charge can only take values as $0.5 or $1 or $0, and all other charges except $0.5 or $1 or $0 as per above query are invalid charges which are many records.

select mta_tax, count(*) as Total_Records
from rajat_NYC_taxi
group by mta_tax order by mta_tax;


--Above query shows mta tax which can only take values as $0.5, other than that all 5745 records are invalid


select improvement_surcharge, count(*) as Total_Records
from rajat_NYC_taxi
group by improvement_surcharge order by improvement_surcharge;


--Above query shows improvement_surcharge which can only take values as $0.3, other than that all values are invalid which are total 849 invalid records


--Basic Data Quality Checks:  Question 3
--You might have encountered unusual or erroneous rows in the dataset.
--Can you conclude which vendor is doing a bad job in providing the records using different columns of the dataset? 

select vendorid, count(*) as Total_Records
from rajat_NYC_taxi
where (year(tpep_pickup) !=2017 or month(tpep_pickup) not in (11,12) or year(tpep_dropoff) !=2017 or month(tpep_dropoff) not in (11,12) or unix_timestamp(tpep_pickup) > unix_timestamp(tpep_dropoff) or passenger_count not in (1,2,3,4,5,6) or trip_distance <= 0.0 or ratecodeID not in (1,2,3,4,5,6) or payment_type not in (1,2,3,4,5,6) or fare_amount <= 0 or extra not in (0,0.5,1) or mta_tax not in(0,0.5) or tip_amount < 0.0 or (payment_type=2 and tip_amount!=0) or tolls_amount < 0.0 or improvement_surcharge not in (0,0.3) or total_amount <= 0)
group by vendorid order by vendorid;

--For VendorID 1:
--Number of invalid Records: 12,912 records
--Total Records Provided: 5,27,386 records
--Percentage of invalid Records: 2.44%

--For VendorID 2:
--Number of invalid Records: 6,416 records
--Total Records Provided: 6,47,183 records
--Percentage of invalid Records: 0.01%


--Clearly VendorID 1 is doing bad job of providing records as it has more bad records than vendorID 2.


--Creating the rajat_orc_NYC_taxi table

drop table rajat_orc_NYC_taxi;

CREATE EXTERNAL TABLE IF NOT EXISTS rajat_orc_NYC_taxi(vendorid int, tpep_pickup string, tpep_dropoff string,
passenger_count int, trip_distance double, ratecodeID int, store_forward_flag string, pickup_location int, dropoff_location int,
payment_type int, fare_amount double, extra double, mta_tax double, tip_amount double, tolls_amount double,
improvement_surcharge double, total_amount double) PARTITIONED BY (mnth int, m_day int)
STORED AS orc
TBLPROPERTIES ("orc.compress" = "SNAPPY");

--Setting hive properties again

SET hive.exec.dynamic.partition = true;
SET hive.exec.dynamic.partition.mode = nonstrict;
SET hive.exec.max.dynamic.partitions = 1000;
SET hive.exec.max.dynamic.partitions.pernode = 1000;
SET hive.execution.engine=mr;

--Inserting records in rajat_orc_NYC_taxi table

INSERT OVERWRITE TABLE rajat_orc_NYC_taxi PARTITION(mnth, m_day)
select vendorid, tpep_pickup, tpep_dropoff, passenger_count, trip_distance, ratecodeID, store_forward_flag,
pickup_location, dropoff_location, payment_type, fare_amount, extra, mta_tax, tip_amount, tolls_amount,
improvement_surcharge, total_amount, month(tpep_pickup)as mnth, day(tpep_pickup)as m_day
from rajat_NYC_taxi
where year(tpep_pickup)=2017 and month(tpep_pickup) in (11,12) and year(tpep_dropoff)=2017 and month(tpep_dropoff) in (11,12) and unix_timestamp(tpep_pickup) < unix_timestamp(tpep_dropoff) and passenger_count in(1,2,3,4,5,6) and trip_distance > 0.0 and ratecodeID in(1,2,3,4,5,6) and payment_type in (1,2,3,4,5,6) and fare_amount > 0 and extra in (0,0.5,1) and mta_tax in(0,0.5) and tip_amount>=0.0 and tolls_amount >= 0.0 and improvement_surcharge in (0,0.3) and total_amount > 0;


--Analysis-I:  Question 1

--1. Compare the overall average fare per trip for November and December.

select mnth, round(avg(fare_amount),2) from rajat_orc_NYC_taxi GROUP BY mnth;

--November Average fare_charge: $12.91
--December Average fare_charge: $12.70


--Analysis-I:  Question 2

--2. Explore the ‘number of passengers per trip’ - how many trips are made by each level of ‘Passenger_count’?
--Do most people travel solo or with other people?

select passenger_count as No_of_Passengers, count(*)as Total_Records
from rajat_orc_NYC_taxi
group by passenger_count;

--No. of passengers - 1  = Total records - 816970
--No. of passengers - 2  = Total records - 174766
--No. of passengers - 3  = Total records - 50177
--No. of passengers - 4  = Total records - 24679
--No. of passengers - 5  = Total records - 54026
--No. of passengers - 6  = Total records - 32877

SELECT sum(CASE when passenger_count = 1 THEN 1 ELSE 0 END)as solo_Trip, 
sum(CASE when passenger_count != 1 THEN 1 ELSE 0 END)as grp_Trip
from rajat_orc_NYC_taxi;

--Number of trips with Solo Passengers: 816970
--Number of trips with Group Passengers: 336525

--Result: People prefer to travel as solo with 816970 passenger trips.


--Analysis-I:  Question 3

--Which is the most preferred mode of payment?

select payment_type, count(*) as Total_Records
from rajat_orc_NYC_taxi
group by payment_type
order by Total_Records desc;

--Payment mode 1 : 779093 Total Records 
--Payment mode 2 : 368611 Total Records 
--Payment mode 3 : 4491 Total Records 
--Payment mode 4 : 1300 Total Records 

--Payment mode 1 is the most preferred mode of payment


--Analysis-I:  Question 4

--What is the average tip paid per trip? Compare the average tip with the 25th, 50th and 75th percentiles.
--Comment whether the ‘average tip’ is a representative statistic (of the central tendency) of ‘tip amount paid’.

select round(avg(tip_amount),2) as avg_tip, round(percentile_approx(tip_amount,0.25),2)as 25_perc, round(percentile_approx(tip_amount, 0.50),2)as 50_perc, round(percentile_approx(tip_amount, 0.75),2)as 75_perc, count(distinct(tip_amount)) as distict_tip
from rajat_orc_NYC_taxi
where payment_type != 2;

--Average Tip paid per trip : $2.68
--25 percentile tip : $1.34
--50 percentile tip : $2.0
--75 percentile tip : $3.05
--Distict tip amount : 2046

--Here ‘average tip’ is not a representative statistic (of the central tendency) of ‘tip amount paid’.


--Analysis-I:  Question 5

--Explore the ‘Extra’ (charge) variable - what fraction of total trips have an extra charge is levied?

select extra as Extra_Charge, count(*)as Total_Records
from rajat_orc_NYC_taxi
group by extra;

--Extra charge $0.0 - 621234 Total records
--Extra charge $0.5 - 359747 Total records
--Extra charge $1.0 - 172514 Total records


SELECT sum(CASE when extra != 0 THEN 1 ELSE 0 END)as extra_charge,
round(sum(CASE when extra != 0 THEN 1 ELSE 0 END)/count(*),2) as fraction
from rajat_orc_NYC_taxi;

--trips_with_extra_misc_charge : 532261
--Percentage of total trips have extra charge : 46%


--Analysis-II:  Question 1

--What is the correlation between the number of passengers on any given trip, and the tip paid per trip?
--Do multiple travellers tip more compared to solo travellers? 

select round(corr(passenger_count, tip_amount),2)as Corr_PassengerCnt_vs_TipAmt, round(avg(CASE when passenger_count=1 then tip_amount else null end),2) as Solo_Trips_Average_Tip, round(avg(CASE when passenger_count != 1 then tip_amount else null end),2) as Group_Trips_Average_Tip
from rajat_orc_NYC_taxi
where payment_type != 2;

--Correlation between Passenger Count and Tip_Amount: 0.01
--Hence a weak positive correlation between Passenger Count and Tip_Amount.
-- Average Tip for Solo Trips: $2.66
-- Average Tip for Group Trips: $2.74

--Yes multiple travellers give more tip than solo travellers.


--Analysis-II:  Question 2

--Segregate the data into five segments of ‘tip paid’: [0-5), [5-10), [10-15) , [15-20) and >=20.
--Calculate the percentage share of each bucket

select Bucket_tip, count(*)as Num_Records, 
round(count(*)/max(records_count),3)as Bucket_tip_perc
from (select count(*) over() records_count,
	CASE when tip_amount >= 0 and tip_amount <5 then 'Bucket_0_5' 
	when tip_amount >=5 and tip_amount < 10 then 'Bucket_5_10'
	when tip_amount >=10 and tip_amount < 15 then 'Bucket_10_15'
	when tip_amount >=15 and tip_amount < 20 then 'Bucket_15_20'
	else 'Bucket_above_20' 
	end as Bucket_tip
    from rajat_orc_NYC_taxi)as sub_tbl
group by Bucket_tip
order by Bucket_tip_perc desc;


--The results of the table clearly specify the following about Tip_Bucket
--Bucket_0_5 constitutes 92.4% with 1065877 records in the dataset.
--Bucket_5_10 constitutes 5.6% with 65032 records in the dataset.
--Bucket_10_15 constitutes 1.7% with 19410 records in the dataset.
--Bucket_15_20 constitutes 0.2% with 2160 records in the dataset.
--Bucket above 20 constitutes 0.1% with 1016 records in the dataset.


--Analysis-II:  Question 3

--Which month has a greater average ‘speed’ - November or December? 

SELECT round(avg(CASE when mnth=11 THEN (trip_distance/((unix_timestamp(tpep_dropoff)-unix_timestamp(tpep_pickup))/3600)) ELSE null end),2)as November_Average_Speed_MPH, round(avg(CASE when mnth=12 THEN (trip_distance/((unix_timestamp(tpep_dropoff)-unix_timestamp(tpep_pickup))/3600)) ELSE null end),2)as December_Average_Speed_MPH, round(round(avg(CASE when mnth=11 THEN (trip_distance/((unix_timestamp(tpep_dropoff)-unix_timestamp(tpep_pickup))/3600)) ELSE null end),2) - round(avg(CASE when mnth=12 THEN (trip_distance/((unix_timestamp(tpep_dropoff)-unix_timestamp(tpep_pickup))/3600)) ELSE null end),2),2) as November_minus_December_Avg_Speed_MPH
from rajat_orc_NYC_taxi;


--November Month Average Speed: 10.97 MPH
--December Month Average Speed: 11.07 MPH
--Average Speed of November - Average Speed of December: -0.1 MPH
--The Average Speed of taxis in December is greater than their Average Speed in December.


--Analysis-II:  Question 4

--Analyse the average speed of the most happening days of the year, i.e. 31st December (New year’s eve)
--and 25th December (Christmas) and compare it with the overall average

SELECT round(avg(CASE when mnth=12 and m_day=25 THEN (trip_distance/((unix_timestamp(tpep_dropoff)-unix_timestamp(tpep_pickup))/3600)) ELSE null end),2)as Christmas_Avg_Speed, round(avg(CASE when mnth=12 and m_day=31 THEN (trip_distance/((unix_timestamp(tpep_dropoff)-unix_timestamp(tpep_pickup))/3600)) ELSE null end),2)as NewYear_Avg_Speed, round(avg(CASE when mnth in (11,12) THEN (trip_distance/((unix_timestamp(tpep_dropoff)-unix_timestamp(tpep_pickup))/3600)) ELSE null end),2)as Overall_Avg_Speed, round(round(avg(CASE when mnth=12 and m_day=25 THEN (trip_distance/((unix_timestamp(tpep_dropoff)-unix_timestamp(tpep_pickup))/3600)) ELSE null end),2) - round(avg(CASE when mnth in (11,12) THEN (trip_distance/((unix_timestamp(tpep_dropoff)-unix_timestamp(tpep_pickup))/3600)) ELSE null end),2),2) as Christmas_minus_Overall_Avg_Speed, round(round(avg(CASE when mnth=12 and m_day=31 THEN (trip_distance/((unix_timestamp(tpep_dropoff)-unix_timestamp(tpep_pickup))/3600)) ELSE null end),2) - round(avg(CASE when mnth in (11,12) THEN (trip_distance/((unix_timestamp(tpep_dropoff)-unix_timestamp(tpep_pickup))/3600)) ELSE null end),2),2) as NewYear_minus_Overall_Avg_Speed
from rajat_orc_NYC_taxi;


--christmas_avg_speed : 15.27 mph
--newyear_avg_speed  : 13.27 mph
--overall_avg_speed_mph : 11.02 mph
--christmas day Speed greater than Overall Avg  : 4.25 mph
--new year day Speed greater than Overall Avg  : 2.25 mph


--The average speed on both Cristmas and New Year is higher than the overall average speed.
--Average speed is Highest on Christmas Day